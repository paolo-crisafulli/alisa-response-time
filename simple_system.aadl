package Simple_system
public
	with requirement_params;
	system Computation_chain
		features
			datain: in data port;
			dataout: out data port;
	end Computation_chain;

	system implementation Computation_chain.Impl
		subcomponents
			first_process: process First_process;
			second_process: process Second_process;
		connections
			incoming_data: port datain -> first_process.datain;
			first_to_second: port first_process.dataout -> second_process.datain;
			outgoing_data: port second_process.dataout -> dataout;
		flows
			end_to_end: end to end flow first_process.in_to_out -> first_to_second -> second_process.in_to_out { Latency=> requirement_params::expected_response_time..requirement_params::expected_response_time;};
	end computation_chain.Impl;

	process First_process
		features
			datain: in data port;
			dataout: out data port;
		flows
			in_to_out: flow path datain -> dataout {Latency => 5ms .. 5ms;};
	end First_process;

	process Second_process
		features
			datain: in data port;
			dataout: out data port;
		flows
			in_to_out: flow path datain -> dataout {Latency => 100ms .. 100ms;};
		properties
			Period => 100ms;
	end Second_process;

end Simple_system;